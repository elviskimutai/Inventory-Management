/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import geniusapp.Constants;
import geniusapp.ItemCombo;
import geniusapp.PoItems;
import geniusapp.PurchaseOrder;
import geniusapp.RepClass;
import geniusapp.Security;
import geniusapp.SqlConnection;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.base.*;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Eng.Joseph Gitahi
 */
public class PurchaseOrders extends javax.swing.JDialog {

    /**
     * Creates new form PurchaseOrders
     */
   // public String RegSource,UserID;
     static SqlConnection _SqlConnection =new SqlConnection();
     Connection con=_SqlConnection.connect();
     Constants _Constants=new Constants();
            
       List<ItemCombo> Items = null;
         DefaultTableModel model = new DefaultTableModel(new String[]{ "Item", "ItemName","Suplier","CostPrice","Quantity","TotalCost","DeliveryDate"}, 0);
    public PurchaseOrders() {
        initComponents();
         setModal(true);
        setLocationRelativeTo(null);
        fillitems();
        fillSupliers();
        txtCumTotal.setEnabled(false); 
     txtCost.setEnabled(false); 
        POtable.setModel(model);
        POtable.getTableHeader().setReorderingAllowed(false);
        POCODE.setEnabled(false);
        GeneratePO();
         POtable.getTableHeader().setReorderingAllowed(false);
         POtable.setEnabled(false);
    }
    public void GeneratePO(){
    try {
           Statement pst=con.createStatement();
            ResultSet rs= pst.executeQuery("{call GeneratePO}");
          
          
             while(rs.next()){
                  String id = rs.getString("POCode");
          POCODE.setText(id);
                 
            }
         
        rs.close();
     pst.close();
            
         
      
        } catch (Exception e) {
            Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing Suppliers");
            sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
        }
}
public void fillSupliers(){
    try {
           Statement pst=con.createStatement();
            ResultSet rs= pst.executeQuery("{call SelectAllSuppliers}");
          
           jComSupliers.addItem("SuppCode  /  Suppliernames");
             while(rs.next()){
                  String id = rs.getString("SuppCode");
            String nme = rs.getString("Suppliernames");
            String cmb = (id+ "  /  "+nme);
                
                 //Items.add(1, new ItemCombo(rs.getString("ItemName"),rs.getString("ItemName")));
                jComSupliers.addItem(cmb);    
                 
            }
         
        rs.close();
     pst.close();
            
         
      
        } catch (Exception e) {
            Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing Suppliers");
            sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtItemCostprice = new javax.swing.JTextField();
        jComItems = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        BTNAddItem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jComSupliers = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        DeliverDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        POtable = new javax.swing.JTable();
        txtCumTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        POCODE = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PURCHASE ORDERS");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/icons8_Search_35px.png"))); // NOI18N

        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/icons8_Trash_Can_35px.png"))); // NOI18N
        jButtonEdit.setText("Remove");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/icons8_Compose_35px.png"))); // NOI18N
        btnPrint.setText("Print PO");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/Images/icons8_Data_Recovery_35px.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEdit)
                        .addComponent(btnPrint)
                        .addComponent(jButton2)))
                .addGap(708, 708, 708))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Purchase Orders Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N

        txtName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtName.setDisabledTextColor(new java.awt.Color(102, 102, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Item Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Quantity");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Delivery Date");

        txtItemCostprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtItemCostprice.setDisabledTextColor(new java.awt.Color(51, 255, 51));

        jComItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComItemsActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Select Item");

        BTNAddItem.setText("ADD ITEM");
        BTNAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNAddItemActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Cumulative Cost");

        txtCost.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCost.setDisabledTextColor(new java.awt.Color(255, 51, 51));

        jComSupliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComSupliersActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Select Suplier");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Unit Cost ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                            .addComponent(jComItems, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtItemCostprice, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantity)
                            .addComponent(txtName)
                            .addComponent(BTNAddItem, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addComponent(txtCost)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComSupliers, 0, 385, Short.MAX_VALUE)
                            .addComponent(DeliverDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComItems, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComSupliers, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtItemCostprice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(DeliverDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTNAddItem)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ITMES SELECTED", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N

        POtable.setFont(new java.awt.Font("Californian FB", 0, 14)); // NOI18N
        POtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        POtable.setGridColor(new java.awt.Color(255, 255, 255));
        POtable.setRowHeight(24);
        POtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                POtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(POtable);

        txtCumTotal.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtCumTotal.setForeground(new java.awt.Color(0, 255, 204));
        txtCumTotal.setText("0");
        txtCumTotal.setSelectedTextColor(new java.awt.Color(204, 204, 255));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("Total Amount");

        jLabel1.setText("PO CODE");

        POCODE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        POCODE.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCumTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(POCODE, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(POCODE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCumTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void fillitems(){
    try {
           Statement pst=con.createStatement();
            ResultSet rs= pst.executeQuery("{call SelectAllItems}");
          
           jComItems.addItem("ItemCode   /  ItemName");
             while(rs.next()){
                  String id = rs.getString("ItemCode");
            String nme = rs.getString("ItemName");
            String cmb = (id+ "  /  "+nme);
                
                 //Items.add(1, new ItemCombo(rs.getString("ItemName"),rs.getString("ItemName")));
                jComItems.addItem(cmb);    
                 
            }
         
        rs.close();
     pst.close();
            
         
      
        } catch (Exception e) {
            e.printStackTrace();
             System.out.println( e.getMessage() );
             
        }
}
    private void POtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_POtableMouseClicked
        // TODO add your handling code he
        // getRowValue();
    }//GEN-LAST:event_POtableMouseClicked

    private void jComItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComItemsActionPerformed
        // TODO add your handling code here:
        try {
            
             // String   Item=jComItems.getSelectedItem().toString();
              String   Item1=jComItems.getSelectedItem().toString();
              String[] parts = Item1.split("/");
              String Item = parts[0];
              PreparedStatement pst=con.prepareStatement("{call SelectItems(?)}");
              pst.setString(1, Item);
              ResultSet rs=pst.executeQuery();
                while(rs.next()){
                    // JOptionPane.showMessageDialog(null,rs.getNString("UserName"));
                txtName.setText(rs.getNString("ItemName"));
                txtName.setEnabled(false);
                txtItemCostprice.setText(rs.getString("CostPrice"));
                txtItemCostprice.setEnabled(false);
               //  jComItems.addItem(rs.getString("ItemName"));              
            }
         
        rs.close();
        pst.close(); 
        } catch (Exception e) {
            Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing Suppliers");
          sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
        }
    
    }//GEN-LAST:event_jComItemsActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
        Double cost=Double.parseDouble(txtItemCostprice.getText());
        Double Qty=Double.parseDouble(txtQuantity.getText());
        txtCost.setText(Double.toString(cost*Qty));
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void BTNAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNAddItemActionPerformed
        // TODO add your handling code here:
            try {
            int rows=POtable.getRowCount();
           Double CostPrice ;
           Double Quantity;
           Date DelDate=null;
            if(rows==0){
                 String   Item1=jComItems.getSelectedItem().toString();
                String[] parts = Item1.split("/");
                String Item = parts[0];
                      if(Item.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter Item  To Continue");
                return;
            }
                 String POCOD = POCODE.getText();  
                  if(POCOD.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter POCOD  To Continue");
                return;
            }
               String   Suplier1=jComSupliers.getSelectedItem().toString();
               String[] SuplierList = Suplier1.split("/");
               String Suplier = SuplierList[0];
                   
               if(Suplier.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter Suplier  To Continue");
                return;
            }
               String ItemName=txtName.getText();
                   if(ItemName.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter ItemName  To Continue");
                return;
            }
                   String c=txtItemCostprice.getText();
                          if(c.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter CostPrice  To Continue");
                return;
            }else{
                         CostPrice =Double.parseDouble(c);      
                          }
               String q=txtQuantity.getText();
               if(q.isEmpty()){
                JOptionPane.showMessageDialog(null,"Enter Quantity  To Continue");
                return;
            }else{
                   Quantity=Double.parseDouble(q);      
                  }
               
               Double TotalCost=CostPrice*Quantity;
               // DOB = new java.sql.Date(jDateChooser1.getDate().getTime());
               
                if (DeliverDate.getDate()!=null) {
                     DelDate=new java.sql.Date(DeliverDate.getDate().getTime());
                }else{
                    JOptionPane.showMessageDialog(null, "Select date!");
              return;
                }
              model.addRow(new Object[]{Item, ItemName,Suplier,CostPrice,Quantity,TotalCost,DelDate});
              txtCumTotal.setText(Double.toString(Double.parseDouble(txtCumTotal.getText()) + TotalCost));

            }else{
                boolean alreadyadded=false; 
                  for(int row = 0; row<rows; row++){
                       
                    String tableItem = (String)POtable.getValueAt(row, 0);
                    String   Item1=jComItems.getSelectedItem().toString();
                    String[] parts = Item1.split("/");
                    String Item = parts[0];
                    if (tableItem.equals(Item)){
                      alreadyadded=true;
                      break;
                      }else{
                        alreadyadded=false;
                       }
                    }
                if(alreadyadded){
                    JOptionPane.showMessageDialog(null, "You have already added this item to the busket!");
                }
                else{
                    String   Item1=jComItems.getSelectedItem().toString();
                     String[] parts = Item1.split("/");
                    String Item = parts[0];
                    String POCOD = POCODE.getText();             
                    String   Suplier1=jComSupliers.getSelectedItem().toString();
                    String[] SuplierList = Suplier1.split("/");
                    String Suplier = SuplierList[0];
                         // JOptionPane.showMessageDialog(null,rs.getNString("UserName"));
                    String ItemName=txtName.getText();

                       String c=txtItemCostprice.getText();
                          if(c.isEmpty()){
                                JOptionPane.showMessageDialog(null,"Enter CostPrice  To Continue");
                                return;
                            }else{
                         CostPrice =Double.parseDouble(c);      
                          }
                    String q=txtQuantity.getText();
                    if(q.isEmpty()){
                     JOptionPane.showMessageDialog(null,"Enter Quantity  To Continue");
                     return;
                    }else{
                      Quantity=Double.parseDouble(q);      
                     }
                    Double TotalCost=CostPrice*Quantity;
                     if (DeliverDate.getDate()!=null) {
                     DelDate=new java.sql.Date(DeliverDate.getDate().getTime());
                        }else{
                            JOptionPane.showMessageDialog(null, "Select date!");
                      return;
                        }
                   model.addRow(new Object[]{Item, ItemName,Suplier,CostPrice,Quantity,TotalCost,DelDate});
                   txtCumTotal.setText(Double.toString(Double.parseDouble(txtCumTotal.getText()) + TotalCost));       
                 
                }
            }
         
                    
        } catch (Exception e) {
            e.printStackTrace();
            Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing Suppliers");
        sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
             
        }
    }//GEN-LAST:event_BTNAddItemActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          try {
            
                 
           int rows=POtable.getRowCount();
           for(int row = 0; row<rows; row++)
            {
                String POCOD = POCODE.getText();
                String Item = (String)POtable.getValueAt(row, 0);
                String ItemName = (String)POtable.getValueAt(row, 1);
                String Suplier = (String)POtable.getValueAt(row, 2);
                Double CostPrice = Double.parseDouble(String.valueOf(POtable.getValueAt(row, 3)));
                Double Qty = Double.parseDouble(String.valueOf(POtable.getValueAt(row, 4)));
                Double TotalCost = Double.parseDouble(String.valueOf(POtable.getValueAt(row, 5)));
                Date DeliverBy= (Date)POtable.getValueAt(row, 6);
                _Constants.setPOCODE(POCOD);
              PurchaseOrder _PurchaseOrder=new PurchaseOrder( POCOD,  Item,  Suplier,  Qty,  CostPrice,  TotalCost,  DeliverBy);
               if(_PurchaseOrder.SavePurchaseOrder()){
                  
                  }
            }
            JOptionPane.showMessageDialog(null,"Purchase Order Saved Successfully");
          model.setRowCount(0);
        } catch (Exception e) {
            e.printStackTrace();
            Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing Suppliers");
          sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        try {
            PurchaseOrder _PurchaseOrder=new PurchaseOrder();
            List<Map<String,Object>> datasource=new ArrayList<Map< String,Object >>();
            
            for (PoItems _PoItems : _PurchaseOrder.PrintPO()) {
                Map<String,Object> row = new HashMap<String,Object>();
               
                row.put("SuppName", _PoItems.getSuppName());
                row.put("SuppEmail", _PoItems.getSuppEmail());
                row.put("SuppPostal", _PoItems.getSuppPostal());
                row.put("ShipToname", _PoItems.getShipToname());
                row.put("ShipToEmail", _PoItems.getShipToEmail());
                row.put("ShipToMobile", _PoItems.getShipToMobile());
                row.put("ItemDesc", _PoItems.getItemDesc());
                row.put("Qty", _PoItems.getQty());
                row.put("UnitPrice", _PoItems.getUnitPrice());
                row.put("LineTotal", _PoItems.getLineTotal());
                datasource.add(row);
            }
            JRDataSource jrDataSource=new JRBeanCollectionDataSource(datasource) ;
            //JasperCompileManager _JasperCompileManager=new JasperCompileManager();
            JasperReport jasperReport = JasperCompileManager.compileReport("src\\reports\\PurchaseOrder.jrxml");
            JasperPrint jasperPrint= JasperFillManager.fillReport(jasperReport,null,jrDataSource);
            JasperViewer jasperViewer=new JasperViewer(jasperPrint);
         //   jasperViewer.setVisible(true);
            
            JDialog dialog = new JDialog(this);//the owner
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle("PURCHASE ORDER");
            //dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(
            //getClass().getResource("URL IMG")));
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);

//            RepClass _RepClass=new RepClass();
//            List<Map<String,Object>> datasource=new ArrayList<Map< String,Object >>();
//          
//            for (ItemCombo _ItemCombo : _RepClass.FindAll()) {
//                Map<String,Object> row = new HashMap<String,Object>();
//               
//                row.put("ItemCode", _ItemCombo.getItemCode());
//                row.put("itemName", _ItemCombo.getItemName());
//                datasource.add(row);
//            }
//            JRDataSource jrDataSource=new JRBeanCollectionDataSource(datasource) ;
//            //JasperCompileManager _JasperCompileManager=new JasperCompileManager();
//            JasperReport jasperReport = JasperCompileManager.compileReport("src\\reports\\newReport.jrxml");
//            JasperPrint jasperPrint= JasperFillManager.fillReport(jasperReport,null,jrDataSource);
//            JasperViewer jasperViewer=new JasperViewer(jasperPrint);
//            jasperViewer.setVisible(true);
        } catch (Exception e) {
           Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Initializing PO Report");
          sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void jComSupliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComSupliersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComSupliersActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        
    try {
        
        int row = POtable.getSelectedRow();
        model.removeRow(row);
    } catch (Exception e) {
        Security sec=new Security();
            sec.setMessage(e.getMessage());
            sec.setModule("Selecting Supplier");
            sec.setRegSource(_Constants.getRegSource());
            sec.setUserID(_Constants.getUserId());
            sec.SaveErrors();
    }

    }//GEN-LAST:event_jButtonEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNAddItem;
    private com.toedter.calendar.JDateChooser DeliverDate;
    private javax.swing.JTextField POCODE;
    public javax.swing.JTable POtable;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JComboBox jComItems;
    private javax.swing.JComboBox jComSupliers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtCumTotal;
    private javax.swing.JTextField txtItemCostprice;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
